/*:ja
 * @plugindesc v1.06 (要YEP_DamageCore) クリティカルヒットに対するコントロールを追加
 * @author Yanfly Engine Plugins
 *
 * @param Critical Rate Formula
 * @text 会心率の式
 * @desc デフォルトの会心率の計算式
 * デフォルト: rate = user.cri(1 - target.cev);
 * @default rate = user.cri(1 - target.cev);
 *
 * @param Critical Multplier Formula
 * @text クリティカル乗数式
 * @desc クリティカル乗数に使用される式
 * デフォルト: value= 3.0;
 * @default value= 3.0 + bonus;
 *
 * @param Flat Critical Formula
 * @text クリティカル追加固定値
 * @desc クリティカルヒットにダメージや回復に追加するボーナス固定値
 * @default value += ((baseDamage >= 0) ? 1 : -1)1.5user.luk + bonus;
 *
 * @help
 * 翻訳:ムノクラ
 * https://fungamemake.com/
 * https://twitter.com/munokura/
 *
 * ===========================================================================
 * 導入
 * ===========================================================================
 *
 * このプラグインはYEP_DamageCoreを必要とします。
 * プラグイン管理のYEP_DamageCoreの下に
 * このプラグインがあることを確認してください。
 *
 * このプラグインを使用すると、
 * 個々のスキル/アイテムの会心率の式を変更できます。
 *
 * ===========================================================================
 * メモタグ
 * ===========================================================================
 * 成功率とダメージを調整するためにこれらのメモタグを使うことができます。
 *
 * スキル、アイテムのメモタグ
 *   <Critical Rate: x%>
 *   スキル/アイテムの会心率をx%に設定し、
 *   使用者が持つ会心率のボーナスを無視し、
 *   対象が持つクリティカルヒット回避のボーナスを無視します。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *   <Critical Rate: x.y>
 *   スキル/アイテムの会心率をfloat値x.yに設定し、
 *   使用者が持っている会心率のボーナスを無視し、
 *   対象が持っているクリティカルヒット回避のボーナスを無視します。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *   <Critical Multiplier: x%>
 *   スキル/アイテムのクリティカルダメージ倍率をx%に設定し、
 *   使用者のクリティカルダメージ倍率のボーナスを考慮します。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *   <Critical Multiplier: x.y>
 *   スキル/アイテムのクリティカルダメージ倍率をx.yに設定し、
 *   使用者のクリティカルダメージ倍率ボーナスを考慮に入れます。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *   <Flat Critical: x% stat>
 *   スキル/アイテムの固定クリティカルボーナスを'stat'のx%増加させます。
 *   'stat'を'hp'、'mp'、'atk'、'def'、'mat'、'mdf'、'agi'、'luk'に
 *   置き換えてください。
 *   このメモタグの複数のインスタンスを使うことは前のものを上書きします。
 *
 * アクター、職業、敵、武器、防具、ステートのメモタグ
 *   <Critical Multiplier: +x%>
 *   <Critical Multiplier: -x%>
 *   アクター、職業、敵、武器、防具、ステートについての
 *   クリティカルヒットのダメージをx%変更します。
 *   付加的な特性です。
 *
 *   <Flat Critical: +x>
 *   <Flat Critical: -x>
 *   アクター、職業、敵、武器、防具、ステートについての
 *   クリティカルヒットのダメージを+x・- x変更します。
 *   付加的な特性です。
 *
 *   <Certain Hit Critical Rate: +x%>
 *   <Certain Hit Critical Rate: -x%>
 *   このメモタグがアクター、職業、敵、武器、防具、ステートに存在する場合、
 *   使用者の特定のヒットスキルの会心率を+x%・- x%変更します。
 *   付加的な特性です。
 *
 *   <Physical Critical Rate: +x%>
 *   <Physical Critical Rate: -x%>
 *   このメモタグがアクター、職業、敵、武器、防具、ステートに存在する場合、
 *   使用者の特定のヒットスキルの物理的クリティカルレートの確率を
 *   +x%・- x%だけ変更します。
 *   付加的な特性です。
 *
 *   <Magical Critical Rate: +x%>
 *   <Magical Critical Rate: -x%>
 *   メモタグがアクター、職業、敵、武器、防具、ステートに存在する場合、
 *   使用者の特定のヒットスキルの魔法のクリティカルレートの確率を
 *   +x%・- x%変更します。
 *   付加的な特性です。
 *
 * ===========================================================================
 * Lunatic Mode - Critical Formulas
 * ===========================================================================
 *
 * JavaScriptの経験が少しある人のために、
 * 個々のスキルのクリティカルヒットに対して
 * より詳細な式を作成することができます。
 *
 * スキルとアイテムのメモタグ
 *   <Critical Rate Formula>
 *   rate = user.cri + 0.2;
 *   rate -= 1 - target.cev;
 *   </Critical Rate Formula>
 *   スキル/アイテムのクリティカルヒット成功率を調整します。
 *   式を書き出すために複数の行を使うことができます、
 *   'rate'はスキルの成功率を決定するために使われます。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *
 *   <Critical Multiplier Formula>
 *   value= 3.0 + bonus;
 *   value= $gameVariables.value(1)0.01;
 *   </Critical Multiplier Formula>
 *   スキル/アイテムのためのクリティカル乗数の公式を調整します。
 *   式を書き出すために複数の行を使用することができ、
 *   'value'はクリティカル乗数に対して調整されたダメージの量になります。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 *   <Flat Critical Formula>
 *   value += 1.5user.luk + bonus;
 *   value -= 0.75target.luk;
 *   </Flat Critical Formula>
 *   スキル/アイテムのための固定値による式を調整します。
 *   主にクリティカルダメージの固定値の増加のために使用され、
 *   通常他の全ての適用乗数の後に適用されます。
 *   注:回復には負の数を使用することを忘れないでください。
 *   注:このタグを使用すると、
 *   スキル/アイテムがクリティカルヒットを有効にするように設定されます。
 *
 * ===========================================================================
 * Yanfly Engine Plugins - Battle Engine 拡張 - アクションシーケンスコマンド
 * ===========================================================================
 *
 * YEP_BattleEngineCoreがこのプラグインと共にインストールされている場合、
 * これらの追加のダメージ関連のアクションシーケンスを利用できます。
 *
 * ===========================================================================
 * CRITICAL MULTIPLIER: x%
 * CRITICAL MULTIPLIER: x.y
 * CRITICAL MULTIPLIER: VARIABLE x
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * アクションシーケンスの最後でスキル/アイテムのクリティカル乗数が変わります。
 * クリティカルヒットがあった場合のみ有効になります。
 * 変数を使用すると、それはパーセントとして扱われます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例: critical multiplier: 50%
 *     critical multiplier: 8.667
 *     critical multiplier: variable 3
 * ===========================================================================
 *
 * ===========================================================================
 * FLAT CRITICAL: +x
 * FLAT CRITICAL: -x
 * FLAT CRITICAL: VARIABLE x
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * アクションシーケンスが終了するまで、
 * スキル/アイテムの横ばいのクリティカル増加が変わります。
 * クリティカルヒットがあった場合のみ有効になります。
 * 自動的にダメージや回復を調整します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例: flat critical: +100
 *     flat critical: -250
 *     flat critical: variable 3
 * ===========================================================================
 *
 * ===========================================================================
 * FORCE CRITICAL
 * FORCE NO CRITICAL
 * NORMAL CRITICAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * アクションシーケンス内の以下のアクション効果が、
 * 常にクリティカルヒットになるか、
 * 他の全ての要因を無視してクリティカルヒットにならないようになります。
 * 'normal critical'を使用すると、
 * 通常の会心率の計算に使用する以下のアクション効果が減少します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例: force critical
 *     force no critical
 *     normal critical
 * ===========================================================================
 *
 * ===========================================================================
 * Changelog
 * ===========================================================================
 *
 * Version 1.06:
 * - Bypass the isDevToolsOpen() error when bad code is inserted into a script
 * call or custom Lunatic Mode code segment due to updating to MV 1.6.1.
 *
 * Version 1.05:
 * - Updated for RPG Maker MV version 1.5.0.
 *
 * Version 1.04:
 * - Bug fixed where the physical critical modifier replaced the magical
 * critical modifier. This should be fixed now.
 *
 * Version 1.03:
 * - Lunatic Mode fail safes added.
 *
 * Version 1.02:
 * - Updated for RPG Maker MV version 1.1.0.
 *
 * Version 1.01b:
 * - Fixed a bug regarding Lunatic Critical Hit Rates.
 * - Fixed a default formula that caused critical hits to heal unexpectedly.
 *
 * Version 1.00:
 * - Finished Plugin!
 */

/*:ja
 * @plugindesc v1.09 敵のドロップ設定を拡張します
 * @author Yanfly Engine Plugins
 *
 * @help
 * 翻訳:ムノクラ
 * https://fungamemake.com/
 * https://twitter.com/munokura/
 *
 * ===========================================================================
 * 導入
 * ===========================================================================
 *
 * RPGツクールMVのデフォルトでは、
 * 敵のドロップアイテムを最大3アイテムまで限られたドロップ率で設定します。
 * このプラグインを使用すると、ドロップを3つ以上を追加できます。
 * このプラグインは、3つ以上のドロップに加えて、
 * 特定の条件が満たされた場合にのみドロップするように
 * 敵のドロップを拡張できます。
 *
 * ===========================================================================
 * 一般的なドロップ - メモタグ
 * ===========================================================================
 *
 * 以下のメモタグを使って、追加のドロップを決定してください。
 * これらのドロップは乱数以外の特別な条件なしで通常ドロップします。
 *
 * 敵のメモタグ:
 *   <Item x: y%>
 *   <Weapon x: y%>
 *   <Armor x: y%>
 *   x のアイテム、武器、防具のIDを敵のドロップに追加し、
 *   ドロップする確率は y% に設定します。
 *
 *   <Enemy Drops>
 *    Item x: y%
 *    Weapon x: y%
 *    Armor x: y%
 *   </Enemy Drops>
 *   敵ドロップをグループ化することができます。
 *   x をアイテム、武器、防具のIDに置き換え、ドロップ率を y% にします。
 *
 *   <Drop Potion: x%>
 *   <Drop Short Sword: x%>
 *   <Drop Feather Cap: x%>
 *   名前を使用したい場合、メモタグに上記の形式を使用できます。
 *   アイテム名のドロップ率が x% になります。
 *   データベースに同じ名前のアイテムが複数ある場合、
 *   アイテム、武器、防具の順にIDが最も高いアイテムが優先されます。
 *
 *   <Enemy Drops>
 *    Potion: x%
 *    Short Sword: x%
 *    Feather Cap: x%
 *   </Enemy Drops>
 *   アイテム名のリストをグループ化するメモタグを書くことができます。
 *   アイテム名のドロップ率が x% になります。
 *   データベースに同じ名前のアイテムが複数ある場合、
 *   アイテム、武器、防具の順にIDが最も高いアイテムが優先されます。
 *
 * ===========================================================================
 * 条件付きドロップ - メモタグ
 * ===========================================================================
 *
 * 敵が特定のアイテムを落とす前に特定の条件が満たされるケースを想定します。
 * 条件が満たされない場合、条件付きドロップ率は0%を返します。
 * 条件が満たされる度に、ドロップ率を増減できます。
 * 以下のメモタグを使用して、条件付きドロップを作成します。
 *
 * 敵のメモタグ:
 *   <Conditional Item x Drop>
 *    condition: +y%
 *    condition: -y%
 *   </Conditional Item x Drop>
 *
 *   <Conditional Weapon x Drop>
 *    condition: +y%
 *    condition: -y%
 *   </Conditional Weapon x Drop>
 *
 *   <Conditional Armor x Drop>
 *    condition: +y%
 *    condition: -y%
 *   </Conditional Armor x Drop>
 *   上記のメモタグは、ドロップするアイテム、武器、防具 x の条件を作成します。
 *   メモタグの間に様々な条件を挿入して、
 *   ドロップ率に対する y% の条件付きの増減を作成します。
 *
 *   <Conditional Named Drop>
 *    condition: +y%
 *    condition: -y%
 *   </Conditional Named Drop>
 *   ドロップに名前を使いたい場合、上記の形式を使用してください。
 *   データベースに同じ名前のアイテムが複数ある場合、
 *   アイテム、武器、防具の順にIDが最も高いアイテムが優先されます。
 *   メモタグの間に条件を挿入し、
 *   ドロップ率に対する y% の条件付きの増減を作成します。
 *
 * 様々な条件:
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * ALIVE MEMBERS EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * ドロップ計算時、生きているパーティーメンバーの数を確認します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Alive Members > 1: +20%
 *       Alive Members === 2: +25%
 *       Alive Members <= 3: -30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * ALWAYS
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * アイテムの基本ドロップ率を設定するために使用できます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Always: +50%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * item x COUNT EVAL
 * weapon x COUNT EVAL
 * armor x COUNT EVAL
 * named item COUNT EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 持っている特定のアイテム、武器、防具、(アイテム名)の数を確認します。
 * アイテム名を使用し、
 * データベースに同じ名前のアイテムが複数ある場合、
 * アイテム、武器、防具の順で最も高いIDが優先されます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Item 1 Count > 1: +20%
 *       Weapon 2 Count === 2: +25%
 *       Armor 3 Count <= 3: -30%
 *       Potion Count >= 4: +35%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * DEAD MEMBERS EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * ドロップ計算時、死んでいるパーティーメンバーの数をeval確認します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Dead Members > 1: +20%
 *       Dead Members === 2: +25%
 *       Dead Members <= 3: -30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * DEATH TURN EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵が死ぬまでのターン数を確認します。
 * この機能には Battle Engine Core プラグインが必要です。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Death Turn > 5: +10%
 *       Death Turn === 5: +20%
 *       Death Turn <= 4: +30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * ENEMY LEVEL EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵のレベルを確認します。
 * この機能には YEP Enemy Levels プラグインが必要です。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Enemy Level === 10: +30%
 *       Enemy Level <= 5: -20%
 *       Enemy Level >= 15: +10%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * EVAL code
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 挿入したコードが実行されます。
 * それがtrueを返すならば、条件は満たされます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Eval user.name() === 'Bat A': +30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * LAST STRIKE SKILL X
 * LAST STRIKE ITEM X
 * LAST STRIKE named
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵への最後の攻撃がアイテムx、スキルx、アクション名かを確認します。
 * アクション名が使用され、
 * データベースに同じアクション名が複数ある場合、
 * アイテム、スキルの順にIDが最も高いものが優先されます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Last Strike Skill 40: +20%
 *       Last Strike Item 50: -30%
 *       Last Strike Firaga: +40%
 *       Last Strike Ice Bomb: -50%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * PARTY MEMBERS EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * ドロップ計算時、
 * パーティーメンバーの数(死んでいるか生きているか)を確認し、
 * それをeval確認します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Party Members > 1: +20%
 *       Party Members === 2: +25%
 *       Party Members <= 3: -30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * RANDOM X%
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * この条件は確率が x% です。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Random 20%: +40%
 *       Random 30%: -60%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TIMES ELEMENT X STRUCK EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵が属性 x によって打たれた回数を比較します。
 * x を属性の名前で置き換えることもできます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Times Element Fire Struck > 6: +10%
 *       Times Element 3 Struck === 5: -10%
 *       Times Element Thunder <= 4: +20%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TIMES ITEM X STRUCK EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵がアイテム x によって打たれた回数を比較します。
 * x をアイテムの名前で置き換えることもできます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Times Item Bomb Struck > 6: +10%
 *       Times Item 42 Struck === 5: -10%
 *       Times Item Uni Struck <= 4: +20%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TIMES SKILL X STRUCK EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵がスキル x によって打たれた回数を比較します。
 * x をスキルの名前に置き換えることもできます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Times Skill Firaga Struck > 6: +10%
 *       Times Skill 40 Struck === 5: -10%
 *       Times Skill Thundaga Struck <= 4: +20%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TIMES STATE X STRUCK EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵がステート x によって攻撃された回数を比較します。
 * x をステートの名前に置き換えることもできます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Times State 4 Struck > 6: +10%
 *       Times State Blind Struck === 5: -10%
 *       Times State Silence Struck <= 4: +20%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TIMES STYPE X STRUCK EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 敵がスキルタイプ x で攻撃された回数を比較します。
 * x をスキルタイプの名前に置き換えることもできます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Times SType 1 Struck > 6: +10%
 *       Times SType Magic Struck === 5: -10%
 *       Times SType Special Struck <= 4: +20%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * SWITCH X ON
 * SWITCH X OFF
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * x をスイッチIDに置き換えます。
 * スイッチ x がオン/オフであれば、条件は満たされます。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Switch 5 ON: +10%
 *       Switch 6 OFF: -10%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * TURN EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * ドロップが行われるまでに戦いが続いたターン数を比較します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Turn > 5: +10%
 *       Turn === 5: +20%
 *       Turn <= 4: +30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 * VARIABLE X EVAL
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * x を変数IDに置き換えます。
 * 変数の値を比較して条件を満たしているかeval確認します。
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * 例:   Variable 5 > 10: +20%
 *       Variable 6 === 11: +25%
 *       Variable 7 <= 12: -30%
 * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 *
 * ===========================================================================
 * ルナティックモード - 新しい JavaScript 関数
 * ===========================================================================
 *
 * JavaScript を使って、敵の確認をする際、
 * これらの機能のいくつかを利用することができます。
 *
 * enemy.deathTurn()
 * 敵が死亡したターンを整数で返します。
 *
 * enemy.killer()
 * 敵のとどめを刺した者を返します。
 * とどめを刺した者のHPを参照したい場合、
 * enemy.killer().hp
 * になります。
 *
 * enemy.lastStruckAction()
 * 敵が最後に攻撃したスキルまたはアイテムを返します。
 *
 * enemy.timesStruckSkill(skill ID)
 * スキルIDによって攻撃された回数の数値を返します。
 *
 * enemy.timesStruckItem(item ID)
 * アイテムIDによって攻撃された回数の数値を返します。
 *
 * enemy.timesStruckSType(skill type ID)
 * スキルタイプIDのスキルによって攻撃された回数の数値を返します。
 *
 * enemy.timesStruckState(state ID)
 * ステートIDによって攻撃された回数の数値を返します。
 *
 * enemy.timesStruckElement(element ID)
 * 属性IDによって攻撃された回数に対する数値を返します。
 *
 * ===========================================================================
 * Changelog
 * ===========================================================================
 *
 * Version 1.09:
 * - Bypass the isDevToolsOpen() error when bad code is inserted into a script
 * call or custom Lunatic Mode code segment due to updating to MV 1.6.1.
 *
 * Version 1.08:
 * - Plugin compatibility update with Element Core to count multiple elemental
 * skills from counting the times struck by each element.
 *
 * Version 1.07:
 * - Lunatic Mode fail safes added.
 *
 * Version 1.06:
 * - New Conditional Drop line: Enemy Level. If you are using the
 * YEP Enemy Level plugin, this will allow conditional drops to check around
 * the enemy's level at death.
 *
 * Version 1.05:
 * - Eval condition is given more priority as to not be triggered by other
 * conditions.
 *
 * Version 1.04:
 * - Updated for RPG Maker MV version 1.1.0.
 *
 * Version 1.03:
 * - Fixed documentation errors.
 * - Fixed a bug with the Turn Count condition.
 *
 * Version 1.02:
 * - Fixed a bug that crashed the game when a conditional drop is made based
 * off of an item count.
 *
 * Version 1.01:
 * - Added a new section: Lunatic Mode - New JavaScript Functions to allow
 * easier reference for the eval condition.
 *
 * Version 1.00:
 * - Finished Plugin!
 */
